<?xml version="1.0"?>
<configuration>
  <appSettings>
    <add key="ConfigFileName" value="sara.dd.ldsw.config"/>
    <add key="EasyFrameConfigName" value="sara.dd.ldsw"/>
    <add key="EasyFrameServiceAuth" value="EasyFrameServiceAuth"/>
    <add key="EasyFrameServiceCode" value="EasyFrameServiceCode"/>
    <add key="EasyFrameServiceReport" value="EasyFrameServiceReport"/>
    <add key="EasyFrameServiceWorkFlow" value="EasyFrameServiceWorkflow"/>
  </appSettings>
  <system.web>
    <webServices>
      <protocols>
        <add name="HttpSoap"/>
        <add name="HttpPost"/>
        <add name="HttpGet"/>
        <add name="Documentation"/>
      </protocols>
    </webServices>
    <!-- 
            设置 compilation debug="true" 可将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
    <compilation debug="true" targetFramework="4.0"/>
    <!--
            通过 <authentication> 节可以配置 ASP.NET 用来 
            识别进入用户的
            安全身份验证模式。 
        -->
    <authentication mode="Windows"/>
    <identity impersonate="true" userName="wangxin" password="mobyta143258" />
    <!--webservice上传大文件附件2-->
    <httpRuntime executionTimeout="36000" maxRequestLength="2097151" useFullyQualifiedRedirectUrl="false" requestValidationMode="2.0"/>
    <!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <customErrors mode="Off"/>
    <pages enableEventValidation="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"  validateRequest="false"/>
  </system.web>
  <system.web.extensions>
    <!--配置 JSON 序列化-->
    <scripting>
      <webServices>
        <jsonSerialization maxJsonLength="5000000"/>

      </webServices>

    </scripting>

  </system.web.extensions>
  <system.webServer>
    <!--此部分实现对低版本浏览器的兼容性-->
    <httpProtocol>
      <customHeaders>
        <clear/>
        <!--<add name="X-UA-Compatible" value="IE=7,IE=9"/>-->
        <add name="X-UA-Compatible" value="IE=edge,chrome=1"/>
        <!--sara.resource.library-->
        <!--实现library和项目不在同一个服务器上:解决ttf,woff文件跨域问题-->
        <!--解决app端html跨域调用服务器端服务的问题-->
        <add name="Access-Control-Allow-Origin" value="*"/>
        <add name="Access-Control-Allow-Methods" value="OPTIONS,POST,GET"/>
        <add name="Access-Control-Allow-Headers" value="x-requested-with,content-type"/>
      </customHeaders>
    </httpProtocol>
    <!--此部分实现对低版本浏览器的兼容性-->
    <security>
      <requestFiltering>
        <fileExtensions>
          <add fileExtension=".*" allowed="true"/>
        </fileExtensions>
        <!--webservice上传大文件附件1 : maxAllowedContentLength="3000000000"-->
        <!--页面跳转时http传递参数最大长度限制 maxQueryString="4080"-->
        <requestLimits maxAllowedContentLength="3000000000" maxQueryString="4080"/>
      </requestFiltering>
    </security>
    <staticContent>
      <mimeMap fileExtension=".*" mimeType="image/png"/>
      <mimeMap fileExtension="." mimeType="image/jpg"/>
    </staticContent>
    <!--sara.resource.library-->
    <!--注意设置这个之后，项目将只能配置在iis的集成模式之下-->
    <handlers>
      <!--<add name="htmlHandler" path="*.html" verb="*" type="sara.dd.ldsw.commonclass.langueclass" preCondition="integratedMode" />-->
      <!--<add name="jsHandler" path="*.js" verb="*" type="sara.resource.library.output.ScriptCs" preCondition="integratedMode" />-->
    </handlers>
    <directoryBrowse enabled="false"/>
  </system.webServer>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true"/>
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="office" publicKeyToken="71E9BCE111E9429C" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-15.0.0.0" newVersion="15.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>